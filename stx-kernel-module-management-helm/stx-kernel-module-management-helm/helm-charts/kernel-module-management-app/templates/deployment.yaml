apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    app.starlingx.io/comonent: platform
    control-plane: controller
  name: kmm-operator-controller
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kmm
      app.kubernetes.io/name: kmm
      app.kubernetes.io/part-of: kmm
      control-plane: controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: kmm
        app.kubernetes.io/name: kmm
        app.kubernetes.io/part-of: kmm
        control-plane: controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: kmm.node.kubernetes.io/control-plane
                operator: Exists
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - args:
        - --config=controller_config.yaml
        env:
        - name: RELATED_IMAGE_WORKER
          value: {{ .Values.manager.workerImage }}
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELATED_IMAGE_BUILD
          value: {{ .Values.manager.executerImage }}
        - name: RELATED_IMAGE_SIGN
          value: {{ .Values.manager.signImage }}
        image: {{ .Values.manager.image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 384Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /controller_config.yaml
          name: manager-config
          subPath: controller_config.yaml
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kmm-operator-controller
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      - configMap:
          name: kmm-operator-manager-config
        name: manager-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    app.starlingx.io/comonent: platform
    control-plane: webhook-server
  name: kmm-operator-webhook-server
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kmm
      app.kubernetes.io/name: kmm
      app.kubernetes.io/part-of: kmm
      control-plane: webhook-server
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: webhook-server
      labels:
        app.kubernetes.io/component: kmm
        app.kubernetes.io/name: kmm
        app.kubernetes.io/part-of: kmm
        control-plane: webhook-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: kmm.node.kubernetes.io/control-plane
                operator: Exists
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - args:
        - --config=controller_config.yaml
        - --enable-module
        - --enable-namespace
        - --enable-preflightvalidation
        image: {{ .Values.webhookServer.image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: webhook-server
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 384Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_config.yaml
          name: manager-config
          subPath: controller_config.yaml
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kmm-operator-controller
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kmm-operator-webhook-server-cert
      - configMap:
          name: kmm-operator-manager-config
        name: manager-config
---
